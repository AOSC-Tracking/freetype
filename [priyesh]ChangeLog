2020-08-24  Priyesh Kumar  <priyeshkkumar@gmail.com>

    * src/sfnt/ttload.c (tt_face_load_font_dir): Changed layout of tracing
    messages.

    * src/base/ftdebug.c (ft_logging_init): Fix Seg fault. 

    * include/freetype/ftlogging.h (FT_Trace_Set_Level): Use more relevant
    parameters name in function declaration. 
    (FT_Custom_Log_Handler): Changed function name `ft_custom_log_handler'->
    `FT_Custom_Log_Handler'. 
    Updated documentation.

    * include/freetype/ftchapters.h: Added `debugging_apis' section under 
    `support_api' chapter.

    * .gitmodules: Updated submodule to track recent changes in dlg library.

    * src/base/ftdebug.c (ft_log_handler): Updated code according to the 
    recent updates in dlg library.
    (ft_logging_init): Added environment variable `FT_LOGGING_FILE', the 
    variable `ft_fileptr' stores it's value.
    Changed function name `ft_custom_log_handler'->
    `FT_Custom_Log_Handler'. 

    * include/freetype/internal/ftdebug.h: Changed function name 
    `ft_custom_log_handler'-> `FT_Custom_Log_Handler'. 

    * README.git: Updated documentation.

    * docs/DEBUG: Updated documentation. 

2020-08-21  Priyesh Kumar  <priyeshkkumar@gmail.com>

    * include/freetype/internal/ftdebug.h (FT_LOG ): Use more relevant
    temporary variable name, to hold the name of FT_COMPONENT.
    (FT_ERROR): Store the name of `FT_COMPONENT' in a temporary variable
    and then pass it as a parameter to `ft_add_tag' and `ft_remove_tag'.

    * src/base/ftdebug.c : Updated Comments.
    (FT_Trace_Set_Level, FT_Trace_Set_Default_Level): Reinitialize the
    values of `ft_timestamp_flag' and `ft_component_flag' every time 
    `FT_Trace_Set_Level' and `FT_Trace_Set_Default_Level' is used.

    * builds/windows/vc2010/freetype.vcxproj (PreprocessorDefinitions): 
    Added `DLG_STATIC' for `Debug Static' configuration on both platforms. 

2020-08-13  Priyesh Kumar  <priyeshkkumar@gmail.com>
    
    * src/base/ftobjs.c (Mac_Read_POST_Resource): Fixed `-Wformat' 
    warnings.

    *  src/bdf/bdflib.c (ACMSG3, ACMSG7): Fixed `-Wformat' warnings. 
      	
    [priyesh]ChangeLog: Fix Date.

    * builds/windows/dlg/dlg.vcxproj (PreprocessorDefinitions): Added 
    `DLG_STATIC' macro for Static builds of dlg on both `x64' and `Win32'
    platforms.

    * builds/windows/vc2010/freetype.vcxproj (PreprocessorDefinitions):
    Added `FT_LOGGING' macro for Debug builds of FreeType on both `x64' and
    `Win32' platforms.

2020-08-12  Priyesh Kumar  <priyeshkkumar@gmail.com>

    * src/base/ftdebug.c (ft_log_handler): Fix "-Wunused-parameter" warning.

    * include/freetype/ftlogging.h ( FTLOGGING_H_ ): Added Include guard.

    * src/*: Fixed format specifiers.

    * [priyesh]ChangeLog: Fix typo.  

    Bug fix on Windows.

    * include/freetype/internal/ftdebug.h (FT_LOG): Store the name of current 
    `FT_COMPONENT' and then pass it to the functions `ft_add_tag()' and 
    `ft_remove_tag()'

2020-08-06  Priyesh Kumar  <priyeshkkumar@gmail.com>

    [build] Fix MinGW errors while building dlg with FreeType on Windows. 

    * builds/freetype.mk (DLG_DIR): New variable to include dlg's header
    files.
    (INCLUDES): Added `DLG_DIR'
    When using MinGW to build dlg along with FreeType on Windows there are 
    missing dlg's include files errors. Therefore we need to add path to dlg's
    include files to remove the errors.

    * src/base/ftsystem.c: Fix `-Wformat' warnings. 

2020-07-30  Priyesh Kumar  <priyeshkkumar@gmail.com>

    * builds/windows/vc2010/freetype.sln: Skip building dlg for `Release' and
    `Release Static' Configurations on both platforms.

    * include/freetype/config/ftoption.h (DLG_STATIC): Removed Macro.
    Removed comments related to `DLG_STATIC' macro.

    * [priyesh]ChangeLog: Fix typo.

  Added a Visual Studios project to build dlg along with FreeType on Windows.

    * builds/windows/dlg/dlg.{vcxproj, vcxproj.filters}: New files.

    * builds/windows/dlg/script.bat: New Batch File. It is called as a pre-
    built event while building dlg to copy files from `submodules/dlg' to
    `src/dlg'.

    * builds/windows/vc2010/freetype.sln: Added a subproject to build `dlg'
    for `Debug' and `Debug Static' Configurations in `Win32' and `x64' 
    platforms.

    * builds/windows/vc2010/freetype.vcxproj (AdditionalIncludeDirectories):
    Added dlg's include files for all configurations and platforms.
    (AdditionalDependencies): Added `dlg.lib' as a dependency for `Debug`
    configuration of FreeType on both platforms.
    (PreprocessorDefinitions): Added `DLG_STATIC' for `Debug Static' 
    configuration on both platforms.

    * [priyesh]ChangeLog: Fix date.

2020-07-28  Priyesh Kumar  <priyeshkkumar@gmail.com>

    Merging master branch with current branch(priyeshLogLibrary)

2020-07-22  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * builds/freetype.mk (FT_CFLAGS): Added `-std=c99' flag 
    
    * builds/unix/unix-cc.in (CFLAGS): Added `-std=c99' flag

    * include/freetype/internal/ftdebug.h: Updated include path of dlg to 
      `#include<..src/dlg/dlg/dlg.h>' and `#include<..src/dlg/dlg/output.h>` 

    * src/dlg/rules.mk (DLG_H): Updated.

    * builds/toplevel.mk, autogen.sh: Copy dlg's include files from 
      `submodules/dlg' to `src/dlg/dlg' due to include path errors
      on windows.

    * builds/toplevel.mk: For builds that do not use `./configure' script dlg
      files are copied from `submodules/dlg' to `src/dlg'.
    
    * builds/compiler/gcc.mk (CFLAGS), builds/unix/unix-cc.in (CFLAGS): 
      Removed `-std=c99' flag.

    * src/base/ftdebug.c (ft_add_tag, ft_remove_tag): Minor changes

    * src/dlg/rules.mk (FT_CFLAGS): Added `-std=c99' flag  

2020-07-21  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * builds/freetype.mk: Updates to build dlg along with rest of base and
        module objects.
    
    * autogen.sh: Minor changes.

2020-07-20  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Changed git submodule(dlg) from `src/dlg` to `submodules/dlg`

    * Updated autogen.sh file:
        For copying the necessary files from `submodules/dlg` to `src\dlg`.
        If the git submodule(dlg) is not checked-out, first it runs necessary 
        git commands for checking out the submodule(dlg) ad then it copies
        the files.
    * include/freetype/internal/ftdebug.h:
        Updated the include path for dlg.
    
    * Added a new file `src/dlg/rules.mk`

2020-07-15  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * builds/compiler/gcc.mk: Added a flag -std=c99 for using dlg on windows

    * builds/windows/ftdebug.c: Added support for using `FT_LOGGING` on 
      windows.

2020-07-13  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * include/freetype/ftlogging.h: Changed the definition of callback 
      function `ft_custom_log_handler` now it also provides FT_COMPONENT
      value to the external log handeling function.
    
    * include/freetype/internal/ftdebug.h:
        1. Added a function `FT_Callback()` which is used when user sets an
           external log handeling callback function.
        2. Code Cleanup and resolved [ -Wunused-variable ] warnings
        3. Added a macro `FT_LOG` to handle the `FT_TRACE` 
    * src/base/ftdebug.c:
        1. Updated code to print FT_COMPONENT and TimeStamp. 
        2. Code Cleanup.
        3.Added support of flag within `FT2_DEBUG` env variable to control 
          the printing of extra info( time-stamp and FT_COMPONENT ):
            3.1 '-v' for printing FT_COMPONENT along with actual log message
            3.2 '-t' for printing TimeStamp along with actual log message
            3.3 '-tv' or '-vt' for printing both FT_COMPONENT and TimeStamp
                 along with actual log message.
        4. Added definition of function `FT_Callback()`

2020-07-04  Priyesh Kumar   <priyeshkkumar@gmail.com>
    
    * Added code to print FT_COMPONENT along with TimeStamp with each log

2020-07-04  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * include/freetype/ftlogging.h: Added two functions `FT_Set_Log_Handler()`
      and `FT_Set_Default_Log_Handler()` to enable the callback functionality.

    * include/freetype/internal/ftdebug.h: Some Code Cleanup

    * src/base/ftdebug.c: 
       1. Added definitions for functions:
          `FT_Set_Default_Log_Handler()` and `FT_Set_Log_Handler()`.
       2. Added support for callback function.


2020-07-03  Priyesh Kumar   <priyeshkkumar@gmail.com>
    
    * Code Cleanup and Added more comments

    * include/freetype/internal/ftdebug.h:
      1. Code Cleanup
      2. Reverted back to the original `ft_debug_init()` function
         Added respective code inside `ft_debug_init()` to handle 
         default and custom trace levels in `ftdebug.c`
      3. Introduced variables to control logging.

    * src/base/ftdebug.c:
      1. Updated definitions of following functions:
         1.1. ft_debug_init()
         1.2. FT_Trace_Set_Default_Level()
         1.3. FT_Trace_Set_Level
      2. Added more comments and Code Cleanup      

2020-07-02  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Fixed some code layout

    * Added a new header- `include/freetype/ftlogging.h` for public APIs to 
      use when using logging:
      1. FT_Trace_Set_Level(): Used to change trace level of components at 
          runtime.
      2. FT_Trace_Set_Default_Level(): Used to set the default value of trace
         level(which is supplied by env FT2_DEBUG)
    
    * include/freetype/internal/ftdebug.h:
      1. Added dlg support for FT_ERROR, now error messages are also written 
         on file if FT_LOGGING is enabled. 
      2. Changed `ft_debug_init()`: now it takes an argument of type const
         char* which is used to specify trace level.
    
    * src/base/ftobjs.c: Changed `ft_debug_init()`, now it passes an argument
      to define trace level.

    * src/base/ftdebug.c: Added definitions of public APIs 
      `FT_Trace_Set_Default_Level()` and `FT_Trace_Set_Level()`

    * Strated working on Callback. 

    * Minor Updates on support of FT_ERROR part

2020-06-30  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Adding new line at end of file

    * include/freetype/internal/ftdebug.h: Added a FreeType specific dlg 
      output handler to print trace logs to file ~ 
      `ft_freetype_output_handler()`

    * src/base/ftdebug.c: 
      1. If FT_LOGGING is enabled `ft_debug_init()` will be called from
         `ft_logging_init()`
      2. Added function definition of `ft_freetype_output_handler)()`

    * src/base/ftobjs.c: If FT_LOGGING macro is disabled, only then FreeType
      will call `ft_debug_init()` else it is controlled by logging APIs.
      
    * Fixed Scaling  
    
2020-06-29  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Added submodule - dlg library (https://github.com/nyorain/dlg)
      in src/dlg.
      This library is used as a logger for FreeType.

    * include/freetype/config/ftoption.h: Added macro `FT_LOGGING` 
      to enable/disable logging in FreeType using dlg.
  
    * [builds] unix-cc-in: Added -std=c99, since dlg does not support 
      C standards below c99. 

    * include/freetype/internal/ftdebug.h: Created an environment for dlg 
      support in FreeType.

    * include/freetype/internal/ftdebug.h: Added functions 
        `ft_logging_init()` and `ft_logging_deinit()` for initializing and
         un-initalizing FILE*.

    * src/base/ftdebug.c: 
       1. Added a FILE* to write logs to file
       2. Added function definitions for functions 
      `ft_logging_init()` and `ft_logging_deinit()`.

    * src/base/ftinit.c: 
      1. Added a function call to `ft_logging_init()` in `FT_Init_FreeType()` 
         if FT_LOGGING macro is enabled.
      2. Added function call to `ft_logging_deinit()` in `FT_Done_FreeType()` 
         if FT_LOGGING macro is enabled.
