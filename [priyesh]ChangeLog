2020-07-21  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * builds/freetype.mk: Updates to build dlg along with rest of base and
        module objects.
    
    * autogen.sh: Minor changes.

2020-07-20  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Changed git submodule(dlg) from `src/dlg` to `submodules/dlg`

    * Updated autogen.sh file:
        For copying the necessary files from `submodules/dlg` to `src\dlg`.
        If the git submodule(dlg) is not checked-out, first it runs necessary 
        git commands for checking out the submodule(dlg) ad then it copies
        the files.
    * include/freetype/internal/ftdebug.h:
        Updated the include path for dlg.
    
    * Added a new file `src/dlg/rules.mk`

2020-07-15  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * builds/compiler/gcc.mk: Added a flag -std=c99 for using dlg on windows

    * builds/windows/ftdebug.c: Added support for using `FT_LOGGING` on 
      windows.

2020-07-13  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * include/freetype/ftlogging.h: Changed the definition of callback 
      function `ft_custom_log_handler` now it also provides FT_COMPONENT
      value to the external log handeling function.
    
    * include/freetype/internal/ftdebug.h:
        1. Added a function `FT_Callback()` which is used when user sets an
           external log handeling callback function.
        2. Code Cleanup and resolved [ -Wunused-variable ] warnings
        3. Added a macro `FT_LOG` to handle the `FT_TRACE` 
    * src/base/ftdebug.c:
        1. Updated code to print FT_COMPONENT and TimeStamp. 
        2. Code Cleanup.
        3.Added support of flag within `FT2_DEBUG` env variable to control 
          the printing of extra info( time-stamp and FT_COMPONENT ):
            3.1 '-v' for printing FT_COMPONENT along with actual log message
            3.2 '-t' for printing TimeStamp along with actual log message
            3.3 '-tv' or '-vt' for printing both FT_COMPONENT and TimeStamp
                 along with actual log message.
        4. Added definition of function `FT_Callback()`

2020-07-04  Priyesh Kumar   <priyeshkkumar@gmail.com>
    
    * Added code to print FT_COMPONENT along with TimeStamp with each log

2020-07-04  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * include/freetype/ftlogging.h: Added two functions `FT_Set_Log_Handler()`
      and `FT_Set_Default_Log_Handler()` to enable the callback functionality.

    * include/freetype/internal/ftdebug.h: Some Code Cleanup

    * src/base/ftdebug.c: 
       1. Added definitions for functions:
          `FT_Set_Default_Log_Handler()` and `FT_Set_Log_Handler()`.
       2. Added support for callback function.


2020-07-03  Priyesh Kumar   <priyeshkkumar@gmail.com>
    
    * Code Cleanup and Added more comments

    * include/freetype/internal/ftdebug.h:
      1. Code Cleanup
      2. Reverted back to the original `ft_debug_init()` function
         Added respective code inside `ft_debug_init()` to handle 
         default and custom trace levels in `ftdebug.c`
      3. Introduced variables to control logging.

    * src/base/ftdebug.c:
      1. Updated definitions of following functions:
         1.1. ft_debug_init()
         1.2. FT_Trace_Set_Default_Level()
         1.3. FT_Trace_Set_Level
      2. Added more comments and Code Cleanup      

2020-07-02  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Fixed some code layout

    * Added a new header- `include/freetype/ftlogging.h` for public APIs to 
      use when using logging:
      1. FT_Trace_Set_Level(): Used to change trace level of components at 
          runtime.
      2. FT_Trace_Set_Default_Level(): Used to set the default value of trace
         level(which is supplied by env FT2_DEBUG)
    
    * include/freetype/internal/ftdebug.h:
      1. Added dlg support for FT_ERROR, now error messages are also written 
         on file if FT_LOGGING is enabled. 
      2. Changed `ft_debug_init()`: now it takes an argument of type const
         char* which is used to specify trace level.
    
    * src/base/ftobjs.c: Changed `ft_debug_init()`, now it passes an argument
      to define trace level.

    * src/base/ftdebug.c: Added definitions of public APIs 
      `FT_Trace_Set_Default_Level()` and `FT_Trace_Set_Level()`

    * Strated working on Callback. 

    * Minor Updates on support of FT_ERROR part

2020-06-30  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Adding new line at end of file

    * include/freetype/internal/ftdebug.h: Added a FreeType specific dlg 
      output handler to print trace logs to file ~ 
      `ft_freetype_output_handler()`

    * src/base/ftdebug.c: 
      1. If FT_LOGGING is enabled `ft_debug_init()` will be called from
         `ft_logging_init()`
      2. Added function definition of `ft_freetype_output_handler)()`

    * src/base/ftobjs.c: If FT_LOGGING macro is disabled, only then FreeType
      will call `ft_debug_init()` else it is controlled by logging APIs.
      
    * Fixed Scaling  
    
2020-06-29  Priyesh Kumar   <priyeshkkumar@gmail.com>

    * Added submodule - dlg library (https://github.com/nyorain/dlg)
      in src/dlg.
      This library is used as a logger for FreeType.

    * include/freetype/config/ftoption.h: Added macro `FT_LOGGING` 
      to enable/disable logging in FreeType using dlg.
  
    * [builds] unix-cc-in: Added -std=c99, since dlg does not support 
      C standards below c99. 

    * include/freetype/internal/ftdebug.h: Created an environment for dlg 
      support in FreeType.

    * include/freetype/internal/ftdebug.h: Added functions 
        `ft_logging_init()` and `ft_logging_deinit()` for initializing and
         un-initalizing FILE*.

    * src/base/ftdebug.c: 
       1. Added a FILE* to write logs to file
       2. Added function definitions for functions 
      `ft_logging_init()` and `ft_logging_deinit()`.

    * src/base/ftinit.c: 
      1. Added a function call to `ft_logging_init()` in `FT_Init_FreeType()` 
         if FT_LOGGING macro is enabled.
      2. Added function call to `ft_logging_deinit()` in `FT_Done_FreeType()` 
         if FT_LOGGING macro is enabled.
